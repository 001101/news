// Generated by CoffeeScript 1.6.3
/*

ownCloud - News

@author Bernhard Posselt
@copyright 2012 Bernhard Posselt dev@bernhard-posselt.com

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU AFFERO GENERAL PUBLIC LICENSE
License as published by the Free Software Foundation; either
version 3 of the License, or any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU AFFERO GENERAL PUBLIC LICENSE for more details.

You should have received a copy of the GNU Affero General Public
License along with this library.  If not, see <http://www.gnu.org/licenses/>.
*/


(function() {
  angular.module('News').directive('itemShortcuts', [
    '$window', function($window) {
      return function(scope, elm, attr) {
        var getCurrentItem, jumpTo, jumpToNextItem, jumpToPreviousItem, keepUnreadCurrentItem, openCurrentItem, starCurrentItem;
        jumpTo = function($scrollArea, $item) {
          var position;
          position = $item.offset().top - $scrollArea.offset().top + $scrollArea.scrollTop();
          return $scrollArea.scrollTop(position);
        };
        jumpToPreviousItem = function(scrollArea) {
          var $item, $items, $previous, $scrollArea, item, notJumped, _i, _len;
          $scrollArea = $(scrollArea);
          $items = $scrollArea.find('.feed_item');
          notJumped = true;
          for (_i = 0, _len = $items.length; _i < _len; _i++) {
            item = $items[_i];
            $item = $(item);
            if ($item.position().top >= 0) {
              $previous = $item.prev();
              if ($previous.length > 0) {
                jumpTo($scrollArea, $previous);
              }
              notJumped = false;
              break;
            }
          }
          if ($items.length > 0 && notJumped) {
            return jumpTo($scrollArea, $items.last());
          }
        };
        jumpToNextItem = function(scrollArea) {
          var $item, $items, $scrollArea, item, jumped, _i, _len;
          $scrollArea = $(scrollArea);
          $items = $scrollArea.find('.feed_item');
          jumped = false;
          for (_i = 0, _len = $items.length; _i < _len; _i++) {
            item = $items[_i];
            $item = $(item);
            if ($item.position().top > 1) {
              jumped = true;
              jumpTo($scrollArea, $item);
              break;
            }
          }
          if (jumped === false) {
            return $scrollArea.scrollTop($scrollArea.prop('scrollHeight'));
          }
        };
        getCurrentItem = function(scrollArea) {
          var $item, $items, $scrollArea, item, _i, _len;
          $scrollArea = $(scrollArea);
          $items = $scrollArea.find('.feed_item');
          for (_i = 0, _len = $items.length; _i < _len; _i++) {
            item = $items[_i];
            $item = $(item);
            if (($item.height() + $item.position().top) > 110) {
              return $item;
            }
          }
        };
        keepUnreadCurrentItem = function(scrollArea) {
          var $item;
          $item = getCurrentItem(scrollArea);
          return $item.find('.keep_unread').trigger('click');
        };
        starCurrentItem = function(scrollArea) {
          var $item;
          $item = getCurrentItem(scrollArea);
          return $item.find('.star').trigger('click');
        };
        openCurrentItem = function(scrollArea) {
          var $item;
          $item = getCurrentItem(scrollArea).find('.item_title a');
          $item.trigger('click');
          return window.open($item.attr('href'), '_blank');
        };
        return $($window.document).keydown(function(e) {
          var focused, scrollArea;
          focused = $(':focus');
          if (!(focused.is('input') || focused.is('select') || focused.is('textarea') || focused.is('checkbox') || focused.is('button'))) {
            scrollArea = elm;
            if (e.keyCode === 74 || e.keyCode === 39 || e.keyCode === 78) {
              return jumpToNextItem(scrollArea);
            } else if (e.keyCode === 75 || e.keyCode === 37 || e.keyCode === 80) {
              return jumpToPreviousItem(scrollArea);
            } else if (e.keyCode === 85) {
              return keepUnreadCurrentItem(scrollArea);
            } else if (e.keyCode === 73 || e.keyCode === 83 || e.keyCode === 76) {
              return starCurrentItem(scrollArea);
            } else if (e.keyCode === 72) {
              starCurrentItem(scrollArea);
              return jumpToNextItem(scrollArea);
            } else if (e.keyCode === 79) {
              return openCurrentItem(scrollArea);
            }
          }
        });
      };
    }
  ]);

}).call(this);
